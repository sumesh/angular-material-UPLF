// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

 

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$md-ctsbg: (
    50 : #e0e7f4,
    100 : #b3c2e3,
    200 : #8099d0,
    300 : #4d70bd,
    400 : #2652ae,
    500 : #0033a0,
    600 : #002e98,
    700 : #00278e,
    800 : #002084,
    900 : #001473,
    A100 : #a1abff,
    A200 : #6e7dff,
    A400 : #3b4fff,
    A700 : #2238ff,
    contrast: (
        50 : #000000,
        100 : #000000,
        200 : #000000,
        300 : #ffffff,
        400 : #ffffff,
        500 : #ffffff,
        600 : #ffffff,
        700 : #ffffff,
        800 : #ffffff,
        900 : #ffffff,
        A100 : #000000,
        A200 : #000000,
        A400 : #ffffff,
        A700 : #ffffff,
    )
); 

$primary: mat-palette($md-ctsbg);
$accent: mat-palette($mat-orange);
// The warn palette is optional (defaults to red).
$warn: mat-palette($mat-red); 

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$theme: mat-light-theme((
    color: (
        primary: $primary,
        accent: $accent,
        warn: $warn,
      )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($theme);
 